.container
	.header
		.btn-group.app-nav
			button#tileView.btn.btn-default.active Edit tiles and patterns
			button#stripView.btn.btn-default Trace and export strips
	#assembleTab.active
		div(style='margin-bottom: 15px;')
			form#tileViewMenu.form-inline(style="margin-left: -10px;")
				.btn-group.padded-btn-group
					a#newDesign.btn.btn-primary
						#[i.fa.fa-file-o] New
					label#loadFile.btn.btn-primary
						input#loadFileInput(type="file", style="display:none;", accept=".wlpr")
						#[i.fa.fa-folder-open] Open
					a#saveFile.btn.btn-primary
						#[i.fa.fa-floppy-o] Save
				.btn-group.padded-btn-group
					a.btn.btn-primary.dropdown-toggle(data-toggle="dropdown")
						#[i.fa.fa-caret-down] Add Tile
					ul.dropdown-menu
						li
							a#addShapeGUI(href="#") Graphical editor (basic)
						li
							a#addShapeText(href="#") Manual text editor (advanced)
					a#delete.btn.btn-primary
						#[i.fa.fa-trash] Delete
					a#copy.btn.btn-primary
						#[i.fa.fa-files-o] Copy
					a#clear.btn.btn-primary
						#[i.fa.fa-times-circle] Clear All
				.btn-group.padded-btn-group
					a#cropDesign.btn.btn-primary
						#[i.fa.fa-crop] Crop
				.btn-group.padded-btn-group
					input#autoSnap(type="checkbox", checked="true", data-label-text="Snap edges")
				.btn-group.padded-btn-group
					a#infer.btn.btn-primary Infer
			form#cropViewMenu.form-inline.hidden
				.btn-group.padded-btn-group
					span
						b Select points to define the area to crop your design to.
				.btn-group.padded-btn-group
					input#cropMode(type="checkbox", checked="false", data-label-text="Crop mode")
				.btn-group.padded-btn-group
					a#selectAll.btn.btn-primary Select All
					a#unselectAll.btn.btn-primary Reset
				.btn-group.padded-btn-group.pull-right
					a#exitCropView.btn.btn-default #[i.fa.fa-times] Exit Crop View
		#assembleSvgContainer
			#assembleSvg
				.shadedOverlay(style="visibility: hidden;")
					.innerOverlay
						h2 #[i.fa.fa-exclamation-triangle] There are no tiles to crop.
						p(style="font-size: 20px; text-transform: none; color: black; margin: 20px;") You need to drag tiles onto the canvas first.
	#traceTab.hidden
		.toolbar
			span
				| Pick a color to assign to strips:#{' '}
			select#colorpicker
			a.btn.btn-primary.pull-right#exportSvg #[i.fa.fa-download] SVG
			a.btn.btn-primary.pull-right#exportPng #[i.fa.fa-download] PNG
		#traceSvg
			.shadedOverlay(style="visibility: hidden;")
				.innerOverlay
					h2 #[i.fa.fa-exclamation-triangle] There are no strips on the canvas.
					p(style="font-size: 20px; text-transform: none; color: black; margin: 20px;") You need to drag tiles onto the canvas under "Edit tiles and patterns" and add patterns to them via the #[i.fa.fa-cog] buttons first.
		.alert.alert-warning(role='alert')
			| Warning: your colors will be reset if you navigate away from this panel.
		.panel.panel-default
			.panel-heading
				h3.panel-title Display parameters
			.panel-body
				form.form-horizontal
					.form-group
						label.control-label.col-md-2 Strip width
						.col-md-4
							input#thickness(type='text')
						a#outlineToggle.btn.btn-default.active(data-toggle='button') Toggle outline
						a#advancedOptions.btn.btn-default Advanced options
					.form-group
						label.control-label.col-md-2 Extension length
						.col-md-4
							input#extensionLength(type='text')
		#customStripPanel.toolbar
			.panel.panel-default
				.panel-heading
					h3.panel-title Manual strip generation
				#customStrips.panel-body
					form
						.form-group
							label.control-label.col-md-2 JSON input:
							textarea#customStripJson.col-md-10(rows='4')
						.form-group
							a#generateCustomStripBtn.btn.btn-default Generate!
		#stripSvg.hidden
		a.hidden#downloadLink
#advancedModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Advanced options
			.modal-body
				p
					| Specify parameters for the generated SVG files here. The defaults work well for generic laser cutters, but you can tweak them to your own preferences.
				form.form-horizontal
					.form-group
						label.control-label.col-md-2 Strip height
						.col-md-3
							input#stripHeight(type='text')
						label.control-label.col-md-3 Printbed width
						.col-md-3
							input#printWidth(type='text')
					.form-group
						label.control-label.col-md-2 Width factor
						.col-md-3#widthFactorDiv
							input#widthFactor(type='text')
						label.control-label.col-md-3 Printbed height
						.col-md-3
							input#printHeight(type='text')
					.form-group
						label.control-label.col-md-2 Inter-strip spacing
						.col-md-3
							input#interSpacing(type='text')
			.modal-footer
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#customShapeGUIModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Custom Tile Editor
			.modal-body
				.container-fluid
					.row
						.col-md-7
							form.form-horizontal
								.form-group
									label.control-label.col-md-4 No. of sides
									.col-md-8
										input#sideNumber(type='text')
								.form-group
									label.control-label.col-md-4 Side length
									.col-md-8
										input#sideLength(type='text')
								.form-group
									.col-md-offset-4.col-md-8
										a#shapeEditToggle.btn.btn-default.active(data-toggle='button') Toggle display
								p
									| You can customize the polygon on the right by dragging on the vertices before clicking "Add to lineup".
						.col-md-5
							#shapeEditSvg
			.modal-footer
				a#addToLineup.btn.btn-primary Add to lineup
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#customShapeTextModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Custom Tile Editor
			.modal-body
				.container-fluid
					p Generate a polygon by specifying arrays of side lengths and interior angles.
					form.form-horizontal
						.form-group
							label.control-label.col-md-2 Side lengths
							.col-md-10
								input#sidelengths.form-control(type='text', placeholder='[1,1,1,1]')
						.form-group
							label.control-label.col-md-2 Interior angles
							.col-md-10
								input#interiorAngles.form-control(type='text', placeholder='[60,120,60,120]')
						.form-group
							.col-md-offset-2.col-md-10
			.modal-footer
				a#addToLineupManual.btn.btn-primary Add to lineup
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#patternModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Pattern Editor
			.modal-body
				.container-fluid
					.row
						.col-md-7
							form.form-horizontal
								.form-group
									label.control-label.col-md-3 Motif
									.col-md-9
										select#patternDropdown.form-control(style="width: 100%")
								#presets
									.form-group
										label#patternLabel1.control-label.col-md-3
										.col-md-9
											input#patternSlider1(type='text')
									.form-group
										label#patternLabel2.control-label.col-md-3
										.col-md-9
											input#patternSlider2(type='text')
								#inferText
									p
										| In this setting, this tile's pattern will be dynamically inferred from its neighbors' on its canvas.
									p To trigger the inference algorithm, click the "Infer" button above.
								#customPattern
									.form-group
										.col-md-offset-3.col-md-9
											a#newCustomPattern.btn.btn-primary Add new pattern
											a#deleteCustomPattern.btn.btn-primary Delete pattern
									.form-group
										label.control-label.col-md-3 Patterns
										.col-md-9
											select#customPatternSelect.form-control(multiple='', size='3')
									.form-group
										label.control-label.col-md-3 Degrees of freedom
										.col-md-9
											input#degreesOfFreedom(type='text')
									.form-group
										label.control-label.col-md-3 Edges
										.col-md-9
											.radio
												label
													input(type='radio', name='edgeRadios', value='auto', checked='')
													| Extends from every
													input#patternInterval.form-control.input-small-padded.input-small(value='2', type='text')
													| edge(s) starting from edge
													input#patternStart.form-control.input-small-padded.input-small(value='0', type='text')
													| and spans
													input#patternDepth.form-control.input-small-padded.input-small(value='2', type='text')
													| edges counting clockwise.
											.radio
												label
													input(type='radio', name='edgeRadios', value='manual')
													| Manual array specification:
													input#manualEdges.form-control(type='text', placeholder='[[1,5],[2,3]]')
									.form-group
										label.control-label.col-md-3 Start offset
										.col-md-9
											input#startOffset(type='text')
									.form-group
										label.control-label.col-md-3 End offset
										.col-md-9
											input#endOffset(type='text')
									.form-group
										label.control-label.col-md-3 Symmetry
										.col-md-9
											.radio
												label
													input(type='radio', name='symmetryRadios', value='mirrorCrop', checked='')
													|  Mirror symmetry with cropping
											.radio
												label
													input(type='radio', name='symmetryRadios', value='mirrorNoCrop')
													|  Mirror symmetry without cropping
											.radio
												label
													input(type='radio', name='symmetryRadios', value='noMirror')
													|  No mirror symmetry
						.col-md-5
							#patternEditSvg
			.modal-footer
				a#confirmPattern.btn.btn-primary Confirm
				button.btn.btn-default(type='button', data-dismiss='modal') Close
#newModal.modal.fade(tabindex='-1', role='dialog')
	.modal-dialog.modal-lg(role='document')
		.modal-content
			.modal-header
				button.close(type='button', data-dismiss='modal', aria-label='Close')
					span(aria-hidden='true') ×
				h4.modal-title Initialize your design
			.modal-body.scrolled-modal
				h5 Beginner: regular tiles
				.row-fluid.clearfix#basicTiles
				h5 Intermediate: Regular and filler tiles
				.row-fluid.clearfix#fillerTiles
				h5 Advanced: Almost-regular tiles
				.row-fluid.clearfix#almostRegular
				h5 Advanced: Quasiperiodic tiles
				.row-fluid.clearfix#quasiperiodic
				h5 Custom
				.row-fluid.clearfix
					.col-lg-4.padded-col
						.image-frame
							img(src="images/starter/question.png")
						a#customTile.image-frame.overlap-full(href="#")
							.gradient-overlay
								.gradient-title Custom
.loading-overlay#loading
	.spinner-wrapper1
		.spinner-wrapper2
			.hexdots-loader
script(src='js/init.js', charset='utf-8')
